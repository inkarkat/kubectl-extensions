#!/bin/bash

set -o pipefail

queryItem=${1:?}; shift
typeset -a singleResultFilter=()
typeset -a finalFilter=(sed -e 's#\t#\n#g')

filterContainer=
if [ $# -ge 2 ] && [ "${@:(-2):1}" = '-c' ]; then
    filterContainer=${!#}
    set -- "${@:1:$(($#-2))}"

    # Omit PODs that don't have any matching queryItems.
    finalFilter=(sed -e '/^[^\t]\+\t$/d')
fi

typeset -a podFilter=()
if [ $# -ge 2 ] && [ "${@:(-2):1}" = -- ]; then
    podFilterExpr=${!#}
    podFilter=(grep -e "^[^ ]*$podFilterExpr")
    set -- "${@:1:$(($#-2))}"

    # Omit POD prefix if there's only a single matching POD and it exactly
    # matches the passed EXPR.
    literalPodFilterExpr=$(printf %s "$podFilterExpr" | sed -e 's/[][\$*.^#]/\\&/g')
    singleResultFilter=(sed -e '1!b' -e "\$s#^${literalPodFilterExpr}\\t##")
fi

getAllPodImages()
{
    if [ "$filterContainer" ]; then
	local template='{{range .items}}{{if not .status.reason}}{{.metadata.name}}{{"\t"}}{{range .status.containerStatuses}}{{if eq .name "'"$filterContainer"'"}}'"$queryItem"'{{end}}{{end}}{{"\n"}}{{end}}{{end}}'
    else
	local template='{{range .items}}{{if not .status.reason}}{{.metadata.name}}{{"\t"}}{{range .status.containerStatuses}}    {{.name}} '"$queryItem"'{{"\t"}}{{end}}{{"\n"}}{{end}}{{end}}'
    fi

    kubectl get pods "$@" -o go-template --template "$template"
}

eval 'getAllPodImages "$@"' "${podFilter:+|}" '"${podFilter[@]}"'"${singleResultFilter:+|}" '"${singleResultFilter[@]}"' "${finalFilter:+|}" '"${finalFilter[@]}"'
