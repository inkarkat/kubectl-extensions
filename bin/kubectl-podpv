#!/bin/bash
set -o pipefail

printUsage()
{
    cat <<HELPTEXT
Print the PV name for the PVCs of the given PODs.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--unpiped] [KUBECTL-ARGS ...] [POD-NAME ...] [-?|-h|--help]'
}

typeset -a args=()
typeset -a kcArgs=()
typeset -a kcHeaderArg=()
isPiped=
if ! [ -t 1 -o "$_kubectl_toterm" ]; then
    kcHeaderArg=(--no-headers=true)
    isPiped=t
fi
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--unpiped)	shift; isPiped=;;

	--all-namespaces)
			kcArgs+=("$1"); shift;;
	--namespace|-n|--cluster|--context|--template)
			kcArgs+=("$1" "$2"); shift; shift;;
	--no-headers=*)	kcHeaderArg=("$1"); shift;;
	--)		break;;
	*)		args+=("$1"); shift;;
    esac
done
set -- "${args[@]}" "$@"

readarray -t pvcs < <(kubectl get pvc "${kcArgs[@]}" "$@" -o go-template --template '{{range .items}}{{.spec.volumeName}}{{"\n"}}{{end}}'; printf '\n%d\n' "$?")	# Exit status from the process substitution is lost; return the actual exit status via an appended additional line.
[ ${pvcs[-1]} -ne 0 ] && exit ${pvcs[-1]}
unset 'pvcs[-1]'; [ -z "${pvcs[-1]}" ] && unset 'pvcs[-1]'

if [ "$isPiped" ]; then
    # DWIM: When piped into another command or captured, just print the first
    # (identifier) column and default to just one line of output, so that it can
    # be combined with other commands.
    filter='head -n 1 | field 1'
fi

eval 'kubectl get pv "${kcHeaderArg[@]}" "${kcArgs[@]}" "${pvcs[@]}"' "${filter:+|}$filter"
