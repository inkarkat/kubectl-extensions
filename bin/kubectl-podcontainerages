#!/bin/bash
set -o pipefail

printUsage()
{
    cat <<HELPTEXT
List the start date / termination state of each container [of container
CONTAINER-NAME] for PODs [matching EXPR].
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[KUBECTL-ARGS ...] [POD-NAME ...] [-- EXPR] [-c CONTAINER-NAME] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

typeset -a emptyFilter=(sed
    -e '/^  [^ ]\+/{ N; /\n$/d }'
    # Also suppress the final empty line. Note: The filter has to come last so
    # that the previous filters can still indiscriminately use an empty line as
    # the block separator without a special case of the last line.
    -e '${ /^$/d }'
)

typeset -a singleResultFilter=()
typeset -a finalFilter=(sed -e 's#^\([^[:space:]]\+\)\t#\1:\n#' -e 's#\t#\n#g')

filterContainer=
if [ $# -ge 2 ] && [ "${*:(-2):1}" = '-c' ]; then
    filterContainer=${!#}
    set -- "${@:1:$(($#-2))}"

    # Omit PODs that don't have any matching containers.
    finalFilter=(sed -e '/^[^\t]\+\t$/d')
fi

typeset -a podFilter=()
if [ $# -ge 2 ] && [ "${*:(-2):1}" = -- ]; then
    podFilterExpr=${!#}
    podFilter=(grep -e "^[^ ]*$podFilterExpr")
    set -- "${@:1:$(($#-2))}"

    # Omit POD prefix if there's only a single matching POD and it exactly
    # matches the passed EXPR.
    literalPodFilterExpr=$(printf %s "$podFilterExpr" | sed -e 's/[][\$*.^#]/\\&/g')
    singleResultFilter=(sed -e '1!b' -e "\$s#^${literalPodFilterExpr}\\t##")
fi

: ${KUBECTL_IGNORE_CONTAINERNAMES='\(kubernetes-\)\?vault-renew'}
typeset -a containerFilter=()
if [ "$KUBECTL_IGNORE_CONTAINERNAMES" ]; then
    ignoredContainerBranches="${KUBECTL_IGNORE_CONTAINERNAMES// /\\|}"
    containerFilter=(sed -e "s# \\(${ignoredContainerBranches}\\) [^ ]\+\\( \\|\$\\)#\\2#")
fi

getAllPodContainerStartTimes()
{
    if [ "$filterContainer" ]; then
	local -r SELECTOR='{{.metadata.name}}{{"\t"}}{{range .status.containerStatuses}}{{if eq .name "'"$filterContainer"'"}}{{if .state.running}}{{.state.running.startedAt}}{{else}}{{range $key, $value := .state}}{{$key}} {{end}}{{end}}{{end}}{{if .status.reason}}(Status:{{.status.reason}}){{end}}{{end}}{{"\n"}}'
    else
	local -r SELECTOR='{{.metadata.name}}{{"\t"}}{{range .status.containerStatuses}}    {{.name}}{{if .state.running}} {{.state.running.startedAt}}{{else}}{{range $key, $value := .state}} {{$key}}{{end}}{{end}}{{"\t"}}{{end}}{{if .status.reason}}    (Status:{{.status.reason}}){{"\t"}}{{end}}{{"\n"}}'
    fi
    kubectl get pods "$@" -o go-template --template "{{if .items}}{{range .items}}${SELECTOR}{{end}}{{else}}${SELECTOR}{{end}}"
}

eval 'getAllPodContainerStartTimes "$@"' \
    "${podFilter:+|}" '"${podFilter[@]}"' \
    "${containerFilter:+|}" '"${containerFilter[@]}"' \
    "${singleResultFilter:+|}" '"${singleResultFilter[@]}"' \
    "${finalFilter:+|}" '"${finalFilter[@]}"' \
    "${emptyFilter:+|}" '"${emptyFilter[@]}"'
