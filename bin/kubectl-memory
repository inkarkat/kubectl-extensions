#!/bin/bash
shopt -qs extglob

# This script reproduces what the kubelet does
# to calculate memory.available relative to root cgroup.

# current memory usage
memory_capacity_in_kb=$(grep MemTotal /proc/meminfo | awk '{print $2}')
memory_capacity_in_bytes=$((memory_capacity_in_kb * 1024))
memory_usage_in_bytes=$(< /sys/fs/cgroup/memory/memory.usage_in_bytes)
memory_total_inactive_file=$(grep total_inactive_file /sys/fs/cgroup/memory/memory.stat | awk '{print $2}')

memory_working_set=${memory_usage_in_bytes}
if [ "$memory_working_set" -lt "$memory_total_inactive_file" ];
then
    memory_working_set=0
else
    memory_working_set=$((memory_usage_in_bytes - memory_total_inactive_file))
fi

bytesToUnits()
{
    local what="${1:?}"; shift
    local byteNum="${1:?}"; shift

    local kibiNum=$((byteNum / 1024))
    local mebiNum=$((kibiNum / 1024))
    local gibiNum=$((mebiNum / 1024))
    printf '%-30s %14d bytes = %11d KiB = %8d MiB = %5d GiB\n' "$what" "$byteNum" "$kibiNum" "$mebiNum" "$gibiNum"
}
memory_available_in_bytes=$((memory_capacity_in_bytes - memory_working_set))

bytesToUnits memory.capacity_in_bytes "$memory_capacity_in_bytes"
bytesToUnits memory.usage_in_bytes "$memory_usage_in_bytes"
bytesToUnits memory.total_inactive_file "$memory_total_inactive_file"
bytesToUnits memory.working_set "$memory_working_set"
bytesToUnits memory.available_in_bytes "$memory_available_in_bytes"


[ "$HOSTNAME" ] || exit
readarray -t currentHostname < <(kubectl-nodenames --fixed-strings -- "$HOSTNAME")
[ ${#currentHostname[@]} -eq 1 ] || \
    readarray -t currentHostname < <(kubectl-nodenames --fixed-strings -- "$(hostname --long)")
[ ${#currentHostname[@]} -eq 1 ] || exit

convertToBytes()
{
    local value="$(< /dev/stdin)"
    local number="${value%%+([^0-9])}"
    case "$value" in
	*Ki)	printf %d "$((number * 1024))";;
	*Mi)	printf %d "$((number * 1024 * 1024))";;
	*Gi)	printf %d "$((number * 1024 * 1024 * 1024))";;
	*)	printf %s "$value";;
    esac
}
allocatable_memory_in_bytes="$(kubectl get node "$@" -o json "${currentHostname[0]}" | jq -r '.status.allocatable.memory' | convertToBytes)"

used_memory_in_bytes=$(kubectl top node "$@" "${currentHostname[0]}" | awk 'END { print $4 }' | convertToBytes)

echo
bytesToUnits allocatable_memory "$allocatable_memory_in_bytes"
bytesToUnits used_memory "$used_memory_in_bytes"
bytesToUnits available_memory "$((allocatable_memory_in_bytes - used_memory_in_bytes))"
